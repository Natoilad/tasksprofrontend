{"version":3,"file":"static/js/427.cb9a4c39.chunk.js","mappings":"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","sources":["components/LogInForm/LogInForm.styled.jsx","components/LogInForm/LogInForm.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","components/Loader/LoaderWelcomePage/Loader.styled.jsx","components/Loader/LoaderWelcomePage/Spiner.jsx","components/Loader/LoaderWelcomePage/Loader.jsx","pages/AuthPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Form as FormWrap, Field as Input } from 'formik';\n\nexport const Section = styled.section`\n  padding-left: 20px;\n  padding-right: 20px;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  height: 100vh;\n  background: linear-gradient(#f6f6f7, #bedbb0);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Wrap = styled.div`\n  width: 335px;\n  min-height: 300px;\n\n  border-radius: 8px;\n  background: #151515;\n\n  @media screen and (min-width: 768px) {\n    width: 424px;\n    height: 332px;\n  }\n`;\n\nexport const LinkWrap = styled.div`\n  margin: 24px 0 40px 24px;\n  border-radius: 8px;\n  display: flex;\n  gap: 14px;\n`;\n\nexport const NavLink = styled(Link)`\n  text-decoration: none;\n  color: rgba(255, 255, 255, 0.3);\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.3px;\n  cursor: pointer;\n\n  &.active {\n    color: #ffffff;\n  }\n`;\n\nexport const Form = styled(FormWrap)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Field = styled(Input)`\n  width: 287px;\n  height: 49px;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4000000059604645;\n  background: #1f1f1f;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  color: #fff;\n  margin-bottom: 14px;\n  padding: 14px 0 14px 18px;\n\n  @media screen and (min-width: 768px) {\n    width: 344px;\n  }\n\n  // &:not(:last-child) {\n  //   margin-bottom: 14px;\n  // }\n  // &:nth-child(2) {\n  //   margin-bottom: 24px;\n  // }\n`;\nexport const FieldPassword = styled(Input)`\n  position: relative;\n  width: 287px;\n  height: 49px;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4000000059604645;\n  background: #1f1f1f;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  color: #fff;\n  margin-bottom: 14px;\n\n  padding: 14px 0 14px 18px;\n\n  @media screen and (min-width: 768px) {\n    width: 344px;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 287px;\n  height: 49px;\n  padding: 0;\n  cursor: pointer;\n  border: none;\n\n  border-radius: 8px;\n  background: #bedbb0;\n  color: #161616;\n\n  text-align: center;\n  font-size: 14px;\n  font-weight: 500;\n  font-family: 'Poppins', sans-serif;\n  letter-spacing: -0.28px;\n  margin-top: 10px;\n  margin-bottom: 24px;\n  transition: font-size 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  @media screen and (min-width: 768px) {\n    width: 344px;\n  }\n\n  &:hover {\n    border: 1px solid #161616;\n    font-size: 16px;\n  }\n`;\n\nexport const PasswordWrap = styled.div`\n  position: relative;\n`;\n\nexport const EyeButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 12px;\n\n  background: inherit;\n  border: none;\n  cursor: pointer;\n  display: flex;\n\n  justify-content: center;\n`;\n\nexport const ErrorWrap = styled.div`\n  color: #ff6600;\n  margin-bottom: 8px;\n\n  text-align: center;\n  font-size: 12px;\n  font-weight: 400;\n  font-family: 'Poppins', sans-serif;\n  letter-spacing: -0.28px;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { authLogin } from 'redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  Form,\n  Field,\n  Button,\n  Wrap,\n  Section,\n  NavLink,\n  LinkWrap,\n  PasswordWrap,\n  FieldPassword,\n  EyeButton,\n  ErrorWrap,\n} from './LogInForm.styled';\nimport sprite from '../../images/sprite.svg';\nimport { useState } from 'react';\n\nconst schema = Yup.object().shape({\n  email: Yup.string().email().required('Required'),\n  password: Yup.string()\n    .min(8, 'Too Short!')\n    .max(64, 'Too Long!')\n    .required('Required'),\n});\n\nconst LogInForm = () => {\n  const dispatch = useDispatch();\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const onFormSubmit = (values, { resetForm }) => {\n    const user = {\n      email: values.email,\n      password: values.password,\n    };\n\n    dispatch(authLogin(user));\n    // console.log(`Successfully ${values.email} login!`);\n    resetForm();\n  };\n\n  const togglePassword = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  return (\n    <Section>\n      <Wrap>\n        <LinkWrap>\n          <NavLink to=\"/auth/register\">Registration</NavLink>\n          <NavLink to=\"/auth/login\" className=\"active\">\n            Log In\n          </NavLink>\n        </LinkWrap>\n\n        <Formik\n          initialValues={{ name: '', email: '', password: '' }}\n          validationSchema={schema}\n          onSubmit={onFormSubmit}\n        >\n          {({ errors, touched }) => (\n            <Form autoComplete=\"off\">\n              <Field name=\"email\" type=\"email\" placeholder=\"Enter your email\" />\n              {errors.email && touched.email ? (\n                <ErrorWrap>{errors.email}</ErrorWrap>\n              ) : null}\n              <PasswordWrap>\n                <FieldPassword\n                  name=\"password\"\n                  type={passwordShown ? 'text' : 'password'}\n                  placeholder=\"Create a password\"\n                />\n\n                <EyeButton onClick={togglePassword} type=\"button\">\n                  <svg width=\"18\" height=\"18\">\n                    <use href={sprite + '#icon-eye'}></use>\n                  </svg>\n                </EyeButton>\n\n                {errors.password && touched.password ? (\n                  <ErrorWrap>{errors.password}</ErrorWrap>\n                ) : null}\n              </PasswordWrap>\n              <Button type=\"submit\">Log In Now</Button>\n            </Form>\n          )}\n        </Formik>\n      </Wrap>\n    </Section>\n  );\n};\n\nexport default LogInForm;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Form as FormWrap, Field as Input } from 'formik';\n\nexport const Section = styled.section`\n  padding-left: 20px;\n  padding-right: 20px;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  height: 100vh;\n  background: linear-gradient(#f6f6f7, #bedbb0);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Wrap = styled.div`\n  width: 335px;\n  min-height: 363px;\n\n  border-radius: 8px;\n  background: #151515;\n\n   @media screen and (min-width: 768px) {\n  width: 424px;\n  height: 395px;\n    }\n`;\n\nexport const LinkWrap = styled.div`\n  margin: 24px 0 40px 24px;\n  border-radius: 8px;\n  display: flex;\n  gap: 14px;\n\n  @media screen and (min-width: 768px) {\n  margin: 40px 0 40px 40px;\n    }\n`;\n\nexport const NavLink = styled(Link)`\n  text-decoration: none;\n  color: rgba(255, 255, 255, 0.3);\n  font-family: Poppins;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 27px;\n  letter-spacing: -0.2px;\n  cursor: pointer;\n\n  &.active {\n    color: #ffffff;\n  }\n`;\n\nexport const Form = styled(FormWrap)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Field = styled(Input)`\n  width: 287px;\n  height: 49px;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4000000059604645;\n  background: #1f1f1f;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  color: #fff;\n  margin-bottom: 14px;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  padding: 14px 0 14px 18px;\n\n  @media screen and (min-width: 768px) {\n   width: 344px;\n    }\n\n  // &:not(:last-child) {\n  //   margin-bottom: 14px;\n  // }\n  // &:nth-child(3) {\n  //   margin-bottom: 24px;\n  // }\n`;\n\nexport const FieldPassword = styled(Input)`\n  position: relative;\n  width: 287px;\n  height: 49px;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4000000059604645;\n  background: #1f1f1f;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  color: #fff;\n  margin-bottom: 24px;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  padding: 14px 0 14px 18px;\n\n  @media screen and (min-width: 768px) {\n   width: 344px;\n    }\n`;\n\nexport const Button = styled.button`\n  width: 287px;\n  height: 49px;\n  padding: 0;\n  cursor: pointer;\n  border: none;\n\n  border-radius: 8px;\n  background: #bedbb0;\n  color: #161616;\n  margin-bottom: 24px;\n  margin-top: 10px;\nfont-family: Poppins;\nline-height: 21px;\n  text-align: center;\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.2px;\n  transition: font-size 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    border: 1px solid #161616;\n    font-size: 16px;\n  }\n\n   @media screen and (min-width: 768px) {\n   width: 344px;\n    }\n`;\n\nexport const ErrorWrap = styled.div`\n  color: #ff6600;\n  margin-bottom: 8px;\n\n  text-align: center;\n  font-size: 12px;\n  font-weight: 400;\n  font-family: 'Poppins', sans-serif;\n  letter-spacing: -0.28px;\n`;\n\nexport const PasswordWrap = styled.div`\n  position: relative;\n`;\n\nexport const EyeButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 12px;\n\n  background: inherit;\n  border: none;\n  cursor: pointer;\n  display: flex;\n\n  justify-content: center;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { authRegister } from 'redux/auth/auth-operations';\nimport { useState } from 'react';\n\nimport {\n  Form,\n  Field,\n  Button,\n  Wrap,\n  Section,\n  NavLink,\n  LinkWrap,\n  ErrorWrap,\n  EyeButton,\n  FieldPassword,\n  PasswordWrap,\n} from './RegisterForm.styled';\nimport sprite from '../../images/sprite.svg';\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .matches(/^[A-Za-z0-9]+$/, 'Only alphanumeric characters are allowed')\n    .min(2, 'Name must be between 2 and 32 characters!')\n    .max(32, 'Name must be between 2 and 32 characters!')\n    .required('Name is required field'),\n  email: Yup.string()\n    .email('Invalid email')\n    .matches(\n      /^[A-Za-z0-9@.]+$/,\n      'Only alphanumeric characters, @, and . are allowed'\n    )\n    .matches(/^[^@]*@[^@]*\\.[^@]*$/, 'Invalid email format')\n    .required('Email is required field'),\n  password: Yup.string()\n    .matches(/^\\S*$/, 'Password cannot contain spaces')\n    .matches(\n      /^[A-Za-z0-9!@#$%^&*()_+=\\-[\\]{}|\\\\:;\"'<>,.?/~`]+$/,\n      'Only alphanumeric characters and special symbols are allowed'\n    )\n    .min(8, 'Name must be between 8 and 64 characters!')\n    .max(64, 'Name must be between 8 and 64 characters!')\n    .required('Password is required field'),\n});\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const onFormSubmit = (values, { resetForm }) => {\n    const user = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    };\n\n    dispatch(authRegister(user));\n    // console.log(`Successfully ${values.email} register!`);\n\n    resetForm();\n  };\n\n  const togglePassword = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  return (\n    <Section>\n      <Wrap>\n        <LinkWrap>\n          <NavLink to=\"/auth/register\" className=\"active\">\n            Registration\n          </NavLink>\n          <NavLink to=\"/auth/login\">Log In</NavLink>\n        </LinkWrap>\n\n        <Formik\n          initialValues={{ name: '', email: '', password: '' }}\n          validationSchema={schema}\n          onSubmit={onFormSubmit}\n          validateOnChange={false}\n        >\n          {({ errors, touched }) => (\n            <Form autoComplete=\"off\">\n              <Field\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter your name\"\n              />\n              {errors.name && touched.name ? (\n                <ErrorWrap>{errors.name}</ErrorWrap>\n              ) : null}\n              <Field name=\"email\" type=\"email\" placeholder=\"Enter your email\" />\n              {errors.email && touched.email ? (\n                <ErrorWrap>{errors.email}</ErrorWrap>\n              ) : null}\n              <PasswordWrap>\n                <FieldPassword\n                  name=\"password\"\n                  type={passwordShown ? 'text' : 'password'}\n                  placeholder=\"Create a password\"\n                />\n                <EyeButton onClick={togglePassword} type=\"button\">\n                  <svg width=\"18\" height=\"18\">\n                    <use href={sprite + '#icon-eye'}></use>\n                  </svg>\n                </EyeButton>\n                {errors.password && touched.password ? (\n                  <ErrorWrap>{errors.password}</ErrorWrap>\n                ) : null}\n              </PasswordWrap>\n\n              <Button type=\"submit\">Register Now</Button>\n            </Form>\n          )}\n        </Formik>\n      </Wrap>\n    </Section>\n  );\n};\n\nexport default RegisterForm;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(#f6f6f7, #bedbb0);\n`;\n","import { RotatingLines } from 'react-loader-spinner';\n\nexport const Spiner = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"96\"\n      visible={true}\n    />\n  );\n};\n","import { Wrap } from './Loader.styled';\nimport { Spiner } from './Spiner';\n\nexport const LoaderWelcomePage = () => {\n  return (\n    <Wrap>\n      <Spiner />\n    </Wrap>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport LogInForm from '../components/LogInForm/LogInForm';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { useAuth } from 'hooks/authHooks';\nimport { LoaderWelcomePage } from 'components/Loader/LoaderWelcomePage/Loader';\n\nconst AuthPage = () => {\n  const { id } = useParams();\n  const { isLoading } = useAuth();\n  return isLoading ? (\n    <LoaderWelcomePage />\n  ) : (\n    <>\n      {id === 'login' && <LogInForm />}\n      {id === 'register' && <RegisterForm />}\n    </>\n  );\n};\n\nexport default AuthPage;\n"],"names":["Section","styled","_templateObject","_taggedTemplateLiteral","Wrap","_templateObject2","LinkWrap","_templateObject3","NavLink","Link","_templateObject4","Form","FormWrap","_templateObject5","Field","Input","_templateObject6","FieldPassword","_templateObject7","Button","_templateObject8","PasswordWrap","_templateObject9","EyeButton","_templateObject10","ErrorWrap","_templateObject11","schema","Yup","shape","email","required","password","min","max","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","passwordShown","setPasswordShown","togglePassword","_jsx","children","_jsxs","to","className","Formik","initialValues","name","validationSchema","onSubmit","values","_ref","resetForm","user","authLogin","_ref2","errors","touched","autoComplete","type","placeholder","onClick","width","height","href","sprite","matches","authRegister","validateOnChange","id","Spiner","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","LoaderWelcomePage","useParams","useAuth","isLoading","_Fragment","LogInForm","RegisterForm"],"sourceRoot":""}